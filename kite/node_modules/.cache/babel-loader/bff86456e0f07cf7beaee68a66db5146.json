{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\kitesurfing\\\\kite\\\\src\\\\components\\\\Tabel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function Tabel(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const columns = [\"Name\", \"Country\", \"Latitude\", \"Longitude\", \"Wind Prob.\", \"When to go\"];\n  const rows = data.map(dat => ({\n    name: dat.name,\n    country: dat.country,\n    lat: dat.lat,\n    long: dat.long,\n    wind: dat.probability,\n    month: dat.month\n  }));\n  const [q, setQ] = React.useState(\"\");\n  console.log(q);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-filt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q,\n        onChange: e => setQ(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-style\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: 0,\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(heading => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: heading\n            }, heading, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.lat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.long\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.wind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tabel, \"xnqptO6ZXf1kwihFH/1CysWbiz0=\");\n\n_c = Tabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabel\");","map":{"version":3,"names":["React","require","polyfill","Tabel","data","columns","rows","map","dat","name","country","lat","long","wind","probability","month","q","setQ","useState","console","log","e","target","value","heading","row"],"sources":["C:/Users/Andrei/Desktop/kitesurfing/kite/src/components/Tabel.js"],"sourcesContent":["import React from 'react';\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\")\r\nexport default function Tabel({data})\r\n{\r\n    const columns = [\"Name\",\"Country\",\"Latitude\",\"Longitude\",\"Wind Prob.\",\"When to go\"]\r\n    const rows = data.map(dat => ({\r\n        name : dat.name,\r\n        country : dat.country,\r\n        lat : dat.lat,\r\n        long : dat.long,\r\n        wind : dat.probability,\r\n        month : dat.month\r\n    })\r\n    );\r\n    const [q,setQ] = React.useState(\"\");\r\n    console.log(q);\r\n    return(\r\n    <div>\r\n        <div className=\"search-filt\">\r\n        <h2>Locations</h2>\r\n            <input type=\"text\" value={q} onChange={ (e) => setQ(e.target.value)} />\r\n        </div>\r\n        <div className=\"table-style\">\r\n        <table cellPadding={0} cellSpacing={0}>\r\n            <thead>\r\n                <tr>{columns.map((heading) => <th key={heading}>{heading}</th>)}</tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map(\r\n                   row => <tr>\r\n                       <td>{row.name}</td>\r\n                       <td>{row.country}</td>\r\n                       <td>{row.lat}</td>\r\n                       <td>{row.long}</td>\r\n                       <td>{row.wind}</td>\r\n                       <td>{row.month}</td>\r\n                       </tr>\r\n               )}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AACA,eAAe,SAASE,KAAT,OACf;EAAA;;EAAA,IAD8B;IAACC;EAAD,CAC9B;EACI,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAQ,SAAR,EAAkB,UAAlB,EAA6B,WAA7B,EAAyC,YAAzC,EAAsD,YAAtD,CAAhB;EACA,MAAMC,IAAI,GAAGF,IAAI,CAACG,GAAL,CAASC,GAAG,KAAK;IAC1BC,IAAI,EAAGD,GAAG,CAACC,IADe;IAE1BC,OAAO,EAAGF,GAAG,CAACE,OAFY;IAG1BC,GAAG,EAAGH,GAAG,CAACG,GAHgB;IAI1BC,IAAI,EAAGJ,GAAG,CAACI,IAJe;IAK1BC,IAAI,EAAGL,GAAG,CAACM,WALe;IAM1BC,KAAK,EAAGP,GAAG,CAACO;EANc,CAAL,CAAZ,CAAb;EASA,MAAM,CAACC,CAAD,EAAGC,IAAH,IAAWjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAjB;EACAC,OAAO,CAACC,GAAR,CAAYJ,CAAZ;EACA,oBACA;IAAA,wBACI;MAAK,SAAS,EAAC,aAAf;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEA,CAA1B;QAA6B,QAAQ,EAAIK,CAAD,IAAOJ,IAAI,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;MAAnD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAK,SAAS,EAAC,aAAf;MAAA,uBACA;QAAO,WAAW,EAAE,CAApB;QAAuB,WAAW,EAAE,CAApC;QAAA,wBACI;UAAA,uBACI;YAAA,UAAKlB,OAAO,CAACE,GAAR,CAAaiB,OAAD,iBAAa;cAAA,UAAmBA;YAAnB,GAASA,OAAT;cAAA;cAAA;cAAA;YAAA,QAAzB;UAAL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAA,UACIlB,IAAI,CAACC,GAAL,CACGkB,GAAG,iBAAI;YAAA,wBACH;cAAA,UAAKA,GAAG,CAAChB;YAAT;cAAA;cAAA;cAAA;YAAA,QADG,eAEH;cAAA,UAAKgB,GAAG,CAACf;YAAT;cAAA;cAAA;cAAA;YAAA,QAFG,eAGH;cAAA,UAAKe,GAAG,CAACd;YAAT;cAAA;cAAA;cAAA;YAAA,QAHG,eAIH;cAAA,UAAKc,GAAG,CAACb;YAAT;cAAA;cAAA;cAAA;YAAA,QAJG,eAKH;cAAA,UAAKa,GAAG,CAACZ;YAAT;cAAA;cAAA;cAAA;YAAA,QALG,eAMH;cAAA,UAAKY,GAAG,CAACV;YAAT;cAAA;cAAA;cAAA;YAAA,QANG;UAAA;YAAA;YAAA;YAAA;UAAA,QADV;QADJ;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AA2BH;;GAzCuBZ,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}