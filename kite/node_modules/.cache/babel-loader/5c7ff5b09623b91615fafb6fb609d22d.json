{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\kitesurfing\\\\kite\\\\src\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport geoJson from 'kite\\src\\chicago-parks.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom,\n      height: \"300px\",\n      width: \"400px\"\n    });\n    geoJson.features.map(feature => new mapboxgl.Marker().setLngLat(feature.geometry.coordinates).addTo(map)); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"HEZTSkdpL2E19LJayfx8jLPCerk=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","geoJson","accessToken","Map","data","mapContainerRef","lng","setLng","lat","setLat","zoom","setZoom","map","container","current","style","center","height","width","features","feature","Marker","setLngLat","geometry","coordinates","addTo","addControl","NavigationControl","on","getCenter","toFixed","getZoom","remove"],"sources":["C:/Users/Andrei/Desktop/kitesurfing/kite/src/components/Map.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport geoJson from 'kite\\src\\chicago-parks.json';\r\nmapboxgl.accessToken =\r\n  'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\r\n\r\nconst Map = ({data}) => {\r\n  const mapContainerRef = useRef(null);\r\n\r\n  const [lng, setLng] = useState(5);\r\n  const [lat, setLat] = useState(34);\r\n  const [zoom, setZoom] = useState(1);\r\n\r\n  // Initialize map when component mounts\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n      height: \"300px\",\r\n      width:\"400px\"\r\n    });\r\n    geoJson.features.map((feature) =>\r\n      new mapboxgl.Marker().setLngLat(feature.geometry.coordinates).addTo(map)\r\n    );\r\n  \r\n    // Add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\r\n\r\n    map.on('move', () => {\r\n      setLng(map.getCenter().lng.toFixed(4));\r\n      setLat(map.getCenter().lat.toFixed(4));\r\n      setZoom(map.getZoom().toFixed(2));\r\n    });\r\n\r\n    // Clean up on unmount\r\n    return () => map.remove();\r\n  }, []); \r\n\r\n  return (\r\n    <div className=\"Main-main\">\r\n      <div id=\"map\" className='map-container' ref={mapContainerRef} /> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;AACAD,QAAQ,CAACE,WAAT,GACE,0FADF;;AAGA,MAAMC,GAAG,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACtB,MAAMC,eAAe,GAAGR,MAAM,CAAC,IAAD,CAA9B;EAEA,MAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;EACA,MAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC,CALsB,CAOtB;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,GAAG,GAAG,IAAIZ,QAAQ,CAACG,GAAb,CAAiB;MAC3BU,SAAS,EAAER,eAAe,CAACS,OADA;MAE3BC,KAAK,EAAE,oCAFoB;MAG3BC,MAAM,EAAE,CAACV,GAAD,EAAME,GAAN,CAHmB;MAI3BE,IAAI,EAAEA,IAJqB;MAK3BO,MAAM,EAAE,OALmB;MAM3BC,KAAK,EAAC;IANqB,CAAjB,CAAZ;IAQAjB,OAAO,CAACkB,QAAR,CAAiBP,GAAjB,CAAsBQ,OAAD,IACnB,IAAIpB,QAAQ,CAACqB,MAAb,GAAsBC,SAAtB,CAAgCF,OAAO,CAACG,QAAR,CAAiBC,WAAjD,EAA8DC,KAA9D,CAAoEb,GAApE,CADF,EATc,CAad;;IACAA,GAAG,CAACc,UAAJ,CAAe,IAAI1B,QAAQ,CAAC2B,iBAAb,EAAf,EAAiD,WAAjD;IAEAf,GAAG,CAACgB,EAAJ,CAAO,MAAP,EAAe,MAAM;MACnBrB,MAAM,CAACK,GAAG,CAACiB,SAAJ,GAAgBvB,GAAhB,CAAoBwB,OAApB,CAA4B,CAA5B,CAAD,CAAN;MACArB,MAAM,CAACG,GAAG,CAACiB,SAAJ,GAAgBrB,GAAhB,CAAoBsB,OAApB,CAA4B,CAA5B,CAAD,CAAN;MACAnB,OAAO,CAACC,GAAG,CAACmB,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;IACD,CAJD,EAhBc,CAsBd;;IACA,OAAO,MAAMlB,GAAG,CAACoB,MAAJ,EAAb;EACD,CAxBQ,EAwBN,EAxBM,CAAT;EA0BA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAK,EAAE,EAAC,KAAR;MAAc,SAAS,EAAC,eAAxB;MAAwC,GAAG,EAAE3B;IAA7C;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvCD;;GAAMF,G;;KAAAA,G;AAyCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}