{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\kitesurfing\\\\kite\\\\src\\\\components\\\\Tabel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function Tabel(_ref) {\n  _s();\n\n  let {\n    sortData,\n    data\n  } = _ref;\n  const columns = [\"Name\", \"Country\", \"Latitude\", \"Longitude\", \"Wind Prob.\", \"When to go\"];\n  const [currData, setCurrData] = React.useState(data);\n  const rows = currData.map(dat => ({\n    name: dat.name,\n    country: dat.country,\n    lat: dat.lat,\n    long: dat.long,\n    wind: dat.probability,\n    month: dat.month\n  }));\n  const [q, setQ] = React.useState(\"\");\n  /*function sortTabel(after)\r\n  { \r\n          if(after.target.innerHTML==\"Name\")\r\n          {\r\n              const tempData = currData.sort((a,b) => { return a.name.localeCompare(b.name)})     \r\n              setCurrData(tempData)\r\n          }\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-style\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: 0,\n        cellSpacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(heading => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: heading => sortTabel(heading),\n              children: heading\n            }, heading, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.lat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.long\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.wind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tabel, \"ZtXSj0JtGH5arPE5YxxXTmuuZRk=\");\n\n_c = Tabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabel\");","map":{"version":3,"names":["React","require","polyfill","Tabel","sortData","data","columns","currData","setCurrData","useState","rows","map","dat","name","country","lat","long","wind","probability","month","q","setQ","heading","sortTabel","row"],"sources":["C:/Users/Andrei/Desktop/kitesurfing/kite/src/components/Tabel.js"],"sourcesContent":["import React from 'react';\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\")\r\nexport default function Tabel({sortData,data})\r\n{\r\n    const columns = [\"Name\",\"Country\",\"Latitude\",\"Longitude\",\"Wind Prob.\",\"When to go\"]\r\n    const [currData,setCurrData] = React.useState(data)\r\n    const rows = currData.map(dat => ({\r\n        name : dat.name,\r\n        country : dat.country,\r\n        lat : dat.lat,\r\n        long : dat.long,\r\n        wind : dat.probability,\r\n        month : dat.month\r\n    })\r\n    );\r\n    const [q,setQ] = React.useState(\"\");\r\n    /*function sortTabel(after)\r\n    { \r\n            if(after.target.innerHTML==\"Name\")\r\n            {\r\n                const tempData = currData.sort((a,b) => { return a.name.localeCompare(b.name)})     \r\n                setCurrData(tempData)\r\n            }\r\n    }*/\r\n    return(\r\n    <div>\r\n        \r\n        <div className=\"table-style\">\r\n        <table cellPadding={0} cellSpacing={1}>\r\n            <thead>\r\n                <tr>{columns.map((heading) => <th key={heading} onClick={(heading)=>sortTabel(heading)}>{heading}</th>)}</tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map(\r\n                   row => <tr>\r\n                       <td>{row.name}</td>\r\n                       <td>{row.country}</td>\r\n                       <td>{row.lat}</td>\r\n                       <td>{row.long}</td>\r\n                       <td>{row.wind}</td>\r\n                       <td>{row.month}</td>\r\n                       </tr>\r\n               )}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AACA,eAAe,SAASE,KAAT,OACf;EAAA;;EAAA,IAD8B;IAACC,QAAD;IAAUC;EAAV,CAC9B;EACI,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAQ,SAAR,EAAkB,UAAlB,EAA6B,WAA7B,EAAyC,YAAzC,EAAsD,YAAtD,CAAhB;EACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBR,KAAK,CAACS,QAAN,CAAeJ,IAAf,CAA/B;EACA,MAAMK,IAAI,GAAGH,QAAQ,CAACI,GAAT,CAAaC,GAAG,KAAK;IAC9BC,IAAI,EAAGD,GAAG,CAACC,IADmB;IAE9BC,OAAO,EAAGF,GAAG,CAACE,OAFgB;IAG9BC,GAAG,EAAGH,GAAG,CAACG,GAHoB;IAI9BC,IAAI,EAAGJ,GAAG,CAACI,IAJmB;IAK9BC,IAAI,EAAGL,GAAG,CAACM,WALmB;IAM9BC,KAAK,EAAGP,GAAG,CAACO;EANkB,CAAL,CAAhB,CAAb;EASA,MAAM,CAACC,CAAD,EAAGC,IAAH,IAAWrB,KAAK,CAACS,QAAN,CAAe,EAAf,CAAjB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EACI,oBACA;IAAA,uBAEI;MAAK,SAAS,EAAC,aAAf;MAAA,uBACA;QAAO,WAAW,EAAE,CAApB;QAAuB,WAAW,EAAE,CAApC;QAAA,wBACI;UAAA,uBACI;YAAA,UAAKH,OAAO,CAACK,GAAR,CAAaW,OAAD,iBAAa;cAAkB,OAAO,EAAGA,OAAD,IAAWC,SAAS,CAACD,OAAD,CAA/C;cAAA,UAA2DA;YAA3D,GAASA,OAAT;cAAA;cAAA;cAAA;YAAA,QAAzB;UAAL;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAA,UACIZ,IAAI,CAACC,GAAL,CACGa,GAAG,iBAAI;YAAA,wBACH;cAAA,UAAKA,GAAG,CAACX;YAAT;cAAA;cAAA;cAAA;YAAA,QADG,eAEH;cAAA,UAAKW,GAAG,CAACV;YAAT;cAAA;cAAA;cAAA;YAAA,QAFG,eAGH;cAAA,UAAKU,GAAG,CAACT;YAAT;cAAA;cAAA;cAAA;YAAA,QAHG,eAIH;cAAA,UAAKS,GAAG,CAACR;YAAT;cAAA;cAAA;cAAA;YAAA,QAJG,eAKH;cAAA,UAAKQ,GAAG,CAACP;YAAT;cAAA;cAAA;cAAA;YAAA,QALG,eAMH;cAAA,UAAKO,GAAG,CAACL;YAAT;cAAA;cAAA;cAAA;YAAA,QANG;UAAA;YAAA;YAAA;YAAA;UAAA,QADV;QADJ;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADA;AAwBH;;GA9CuBhB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}