{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrei\\\\Desktop\\\\kitesurfing\\\\kite\\\\src\\\\components\\\\Tabel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function Tabel(_ref) {\n  _s();\n\n  let {\n    setData,\n    dataCopy,\n    data\n  } = _ref;\n  const [nameFilt, setNameFilt] = React.useState(false);\n\n  function changeNameFilt() {\n    setNameFilt(prevState => !prevState);\n  }\n\n  const [countryFilt, setCountryFilt] = React.useState(false);\n\n  function changeCountryFilt() {\n    setCountryFilt(prevState => !prevState);\n  }\n\n  const [latFilt, setLatFilt] = React.useState(false);\n\n  function changeLatFilt() {\n    setLatFilt(prevState => !prevState);\n  }\n\n  const [longFilt, setLongFilt] = React.useState(false);\n\n  function changeLongFilt() {\n    setLongFilt(prevState => !prevState);\n  }\n\n  const [windFilt, setWindFilt] = React.useState(false);\n\n  function changeWindFilt() {\n    setWindFilt(prevState => !prevState);\n  }\n\n  const [whenFilt, setWhenFilt] = React.useState(false);\n\n  function changeWhenFilt() {\n    setWhenFilt(prevState => !prevState);\n  }\n\n  const columns = [\"Name\", \"Country\", \"Latitude\", \"Longitude\", \"Wind Prob.\", \"When to go\"];\n  const rows = data.map(dat => ({\n    name: dat.name,\n    country: dat.country,\n    lat: dat.lat,\n    long: dat.long,\n    wind: dat.probability,\n    month: dat.month\n  }));\n  const [q, setQ] = React.useState(\"\");\n\n  function sortTabel(after) {\n    if (after.target.innerHTML == \"Name\") {\n      if (nameFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return a.name.localeCompare(b.name);\n        });\n        setData(tempData);\n        changeNameFilt();\n      } else {\n        setData(dataCopy);\n        changeNameFilt();\n      }\n    }\n\n    if (after.target.innerHTML == \"Country\") {\n      if (countryFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return a.country.localeCompare(b.country);\n        });\n        setData(tempData);\n        changeCountryFilt();\n      } else {\n        setData(dataCopy);\n        changeCountryFilt();\n      }\n    }\n\n    if (after.target.innerHTML == \"Latitude\") {\n      if (latFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return a.lat - b.lat;\n        });\n        setData(tempData);\n        changeLatFilt();\n      } else {\n        setData(dataCopy);\n        changeLatFilt();\n      }\n    }\n\n    if (after.target.innerHTML == \"Longitude\") {\n      if (longFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return a.long - b.long;\n        });\n        setData(tempData);\n        changeLongFilt();\n      } else {\n        setData(dataCopy);\n        changeLongFilt();\n      }\n    }\n\n    if (after.target.innerHTML == \"Wind Prob.\") {\n      if (windFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return a.probability - b.probability;\n        });\n        setData(tempData);\n        changeWindFilt();\n      } else {\n        setData(dataCopy);\n        changeWindFilt();\n      }\n    }\n\n    if (after.target.innerHTML == \"When to go\") {\n      if (whenFilt == false) {\n        const tempData = data.sort((a, b) => {\n          return new Date(a.month + \"1, 2012\").getMonth() - new Date(b.month + \"1, 2012\").getMonth();\n        });\n        setData(tempData);\n        changeWhenFilt();\n      } else {\n        setData(dataCopy);\n        changeWhenFilt();\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-style\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellPadding: 0,\n        cellSpacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(heading => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: heading => sortTabel(heading),\n              children: heading\n            }, heading, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 47\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.lat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.long\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.wind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tabel, \"A5XTbFvm3iFA6eeZKCL9fsNLl8g=\");\n\n_c = Tabel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabel\");","map":{"version":3,"names":["React","require","polyfill","Tabel","setData","dataCopy","data","nameFilt","setNameFilt","useState","changeNameFilt","prevState","countryFilt","setCountryFilt","changeCountryFilt","latFilt","setLatFilt","changeLatFilt","longFilt","setLongFilt","changeLongFilt","windFilt","setWindFilt","changeWindFilt","whenFilt","setWhenFilt","changeWhenFilt","columns","rows","map","dat","name","country","lat","long","wind","probability","month","q","setQ","sortTabel","after","target","innerHTML","tempData","sort","a","b","localeCompare","Date","getMonth","heading","row"],"sources":["C:/Users/Andrei/Desktop/kitesurfing/kite/src/components/Tabel.js"],"sourcesContent":["import React from 'react';\r\n\r\nrequire(\"es6-promise\").polyfill();\r\nrequire(\"isomorphic-fetch\")\r\nexport default function Tabel({setData,dataCopy,data})\r\n{\r\n    const [nameFilt,setNameFilt] = React.useState(false)\r\n    function changeNameFilt()\r\n    {\r\n        setNameFilt( prevState => !prevState)\r\n    }\r\n    const [countryFilt,setCountryFilt] = React.useState(false)\r\n    function changeCountryFilt()\r\n    {\r\n        setCountryFilt( prevState => !prevState)\r\n    }\r\n    const [latFilt,setLatFilt] = React.useState(false)\r\n    function changeLatFilt()\r\n    {\r\n        setLatFilt( prevState => !prevState)\r\n    }\r\n    const [longFilt,setLongFilt] = React.useState(false)\r\n    function changeLongFilt()\r\n    {\r\n        setLongFilt( prevState => !prevState)\r\n    }\r\n    const [windFilt,setWindFilt] = React.useState(false)\r\n    function changeWindFilt()\r\n    {\r\n        setWindFilt( prevState => !prevState)\r\n    }\r\n    const [whenFilt,setWhenFilt] = React.useState(false)\r\n    function changeWhenFilt()\r\n    {\r\n        setWhenFilt( prevState => !prevState)\r\n    }\r\n    const columns = [\"Name\",\"Country\",\"Latitude\",\"Longitude\",\"Wind Prob.\",\"When to go\"]\r\n    const rows = data.map(dat => ({\r\n        name : dat.name,\r\n        country : dat.country,\r\n        lat : dat.lat,\r\n        long : dat.long,\r\n        wind : dat.probability,\r\n        month : dat.month\r\n    })\r\n    );\r\n    const [q,setQ] = React.useState(\"\");\r\n    function sortTabel(after)\r\n    { \r\n            if(after.target.innerHTML==\"Name\")\r\n            {\r\n                if(nameFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return a.name.localeCompare(b.name)})     \r\n                setData(tempData)\r\n                changeNameFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeNameFilt()\r\n                }\r\n            }\r\n            if(after.target.innerHTML==\"Country\")\r\n            {\r\n                if(countryFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return a.country.localeCompare(b.country)})     \r\n                setData(tempData)\r\n                changeCountryFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeCountryFilt()\r\n                }\r\n            }\r\n            if(after.target.innerHTML==\"Latitude\")\r\n            {\r\n                if(latFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return a.lat - b.lat})     \r\n                setData(tempData)\r\n                changeLatFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeLatFilt()\r\n                }\r\n            }\r\n            if(after.target.innerHTML==\"Longitude\")\r\n            {\r\n                if(longFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return a.long - b.long})     \r\n                setData(tempData)\r\n                changeLongFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeLongFilt()\r\n                }\r\n            }\r\n            if(after.target.innerHTML==\"Wind Prob.\")\r\n            {\r\n                if(windFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return a.probability - b.probability})     \r\n                setData(tempData)\r\n                changeWindFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeWindFilt()\r\n                }\r\n            }\r\n            if(after.target.innerHTML==\"When to go\")\r\n            {\r\n                if(whenFilt==false)\r\n                {\r\n                const tempData = data.sort((a,b) => { return (new Date(a.month+\"1, 2012\").getMonth()) -  (new Date(b.month+\"1, 2012\").getMonth())})     \r\n                setData(tempData)\r\n                changeWhenFilt()\r\n                }\r\n                else\r\n                {\r\n                    setData(dataCopy)\r\n                    changeWhenFilt()\r\n                }\r\n            }\r\n    }\r\n    return(\r\n    <div>\r\n        \r\n        <div className=\"table-style\">\r\n        <table cellPadding={0} cellSpacing={1}>\r\n            <thead>\r\n                <tr>{columns.map((heading) => <th key={heading} onClick={(heading)=>sortTabel(heading)}>{heading}</th>)}</tr>\r\n            </thead>\r\n            <tbody>\r\n               {rows.map(\r\n                   row => <tr>\r\n                       <td>{row.name}</td>\r\n                       <td>{row.country}</td>\r\n                       <td>{row.lat}</td>\r\n                       <td>{row.long}</td>\r\n                       <td>{row.wind}</td>\r\n                       <td>{row.month}</td>\r\n                       </tr>\r\n               )}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}